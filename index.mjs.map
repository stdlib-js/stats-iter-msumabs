{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar isIteratorLike = require( '@stdlib/assert-is-iterator-like' );\nvar isPositiveInteger = require( '@stdlib/assert-is-positive-integer' ).isPrimitive;\nvar isFunction = require( '@stdlib/assert-is-function' );\nvar iteratorSymbol = require( '@stdlib/symbol-iterator' );\nvar incrmsumabs = require( '@stdlib/stats-incr-msumabs' );\nvar format = require( '@stdlib/error-tools-fmtprodmsg' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iteratively computes a moving sum of absolute values.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} W - window size\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Iterator} iterator\n*\n* @example\n* var runif = require( '@stdlib/random-iter-uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itermsumabs( rand, 3 );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction itermsumabs( iterator, W ) {\n\tvar iter;\n\tvar FLG;\n\tvar acc;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( '0fW48', iterator ) );\n\t}\n\tif ( !isPositiveInteger( W ) ) {\n\t\tthrow new TypeError( format( '0fW4I', W ) );\n\t}\n\tacc = incrmsumabs( W );\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tv = acc( v.value );\n\t\t} else {\n\t\t\tv = acc( NaN );\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn itermsumabs( iterator[ iteratorSymbol ](), W );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = itermsumabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which iteratively computes a moving sum of absolute values.\n*\n* @module @stdlib/stats-iter-msumabs\n*\n* @example\n* var runif = require( '@stdlib/random-iter-uniform' );\n* var itermsumabs = require( '@stdlib/stats-iter-msumabs' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itermsumabs( rand, 3 );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n"],"names":["setReadOnly","require$$0","isIteratorLike","require$$1","isPositiveInteger","require$$2","isPrimitive","isFunction","require$$3","iteratorSymbol","require$$4","incrmsumabs","require$$5","format","require$$6","main","itermsumabs","iterator","W","iter","FLG","acc","TypeError","v","done","next","value","NaN","arguments","length","lib"],"mappings":";;moBAsBA,IAAIA,EAAcC,EACdC,EAAiBC,EACjBC,EAAoBC,EAAgDC,YACpEC,EAAaC,EACbC,EAAiBC,EACjBC,EAAcC,EACdC,EAASC,EA0Hb,IAAAC,EAxFA,SAASC,EAAaC,EAAUC,GAC/B,IAAIC,EACAC,EACAC,EACJ,IAAMnB,EAAgBe,GACrB,MAAM,IAAIK,UAAWT,EAAQ,QAASI,IAEvC,IAAMb,EAAmBc,GACxB,MAAM,IAAII,UAAWT,EAAQ,QAASK,IAavC,OAXAG,EAAMV,EAAaO,GAInBlB,EADAmB,EAAO,GACY,QAenB,WACC,IAAII,EACJ,GAAKH,EACJ,MAAO,CACNI,MAAQ,GAIV,IADAD,EAAIN,EAASQ,QACND,KAEN,OADAJ,GAAM,EACC,CACNI,MAAQ,GAITD,EADuB,iBAAZA,EAAEG,MACTL,EAAKE,EAAEG,OAEPL,EAAKM,KAEV,MAAO,CACND,MAASH,EACTC,MAAQ,MAnCVxB,EAAamB,EAAM,UA8CnB,SAAcO,GAEb,GADAN,GAAM,EACDQ,UAAUC,OACd,MAAO,CACNH,MAASA,EACTF,MAAQ,GAGV,MAAO,CACNA,MAAQ,MApDLf,GAAkBF,EAAYU,EAAUR,KAC5CT,EAAamB,EAAMV,GA6DpB,WACC,OAAOO,EAAaC,EAAUR,KAAoBS,MA5D5CC,GC7BRW,EALe7B"}